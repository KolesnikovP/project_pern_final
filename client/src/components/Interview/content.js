export const content = [
  {
    tittle: 'Для чего используется React и какие проблемы он решает?',
    intro:
      'До React разработчикам оставалось создавать пользовательские интерфейсы вручную с помощью «vanilla JavaScript...»',
    description:
      'До React разработчикам оставалось создавать пользовательские интерфейсы вручную с помощью «vanilla JavaScript» ' +
      '(разработчики говорят о необработанном языке JavaScript без каких-либо поддерживающих фреймворков) или с помощью ' +
      'предшественников React, менее ориентированных на пользовательский интерфейс, таких как jQuery. ' +
      'Этот процесс привел к длительному времени разработки и большему количеству нарушений и ошибок. ' +
      'Превосходство React быстро решило подобные проблемы. На React созданы сотни тысяч веб-сайтов. ' +
      'Он чрезвычайно популярен благодаря своей скорости работы и способности адаптироваться к проектам разного масштаба. ' +
      'Некоторые примеры популярных сайтов, использующих React, - это Facebook, Instagram, Netflix, Reddit, Airbnb и Uber.\n' +
      '\n' +
      'React упрощает создание тестовых примеров пользовательского интерфейса, создание сайтов, оптимизированных для SEO, ' +
      'повторное использование компонентов на многих платформах, внедрение существующего кода для веб-сайта ' +
      'в мобильное приложение, повышение производительности ресурсоемких веб-приложений, и его можно использовать везде, ' +
      'где есть JavaScript. необходимо.',
    img: 'https://cdn.discordapp.com/splashes/102860784329052160/9f7f306d80d910f33e5fe361675558c7.jpg?size=512',
  },
  {
    tittle: 'Каковы основные преимущества или особенности React?',
    intro:
      'Явным преимуществом использования React является то, что он использует стиль функционального программирования.',
    description:
      'Явным преимуществом использования React является то, что он использует стиль функционального программирования. Функциональное программирование - это процесс создания программного обеспечения путем составления чистых функций; избегая общего состояния, изменяемых данных и побочных эффектов. Функциональное программирование является декларативным, а не императивным, и в результате React использует очень мало «шаблонного» кода. Фактически это означает, что вы можете многого добиться с помощью небольшого количества кода. Изучение процесса может занять некоторое время, однако в конечном итоге это сокращает время разработки и снижает риск ошибок кодирования.\n' +
      '\n' +
      'React имеет две ключевые функции, которые делают его привлекательным для разработчиков JavaScript: JSX и Virtual DOM.\n' +
      '\n' +
      'JSX (сокращение от JavaScript eXtension) - это специальное расширение синтаксиса React, которое эффективно позволяет веб-разработчикам смешивать синтаксис HTML с синтаксисом JavaScript. Обычно нативный JavaScript не поддерживает эту функцию, поэтому JSX значительно сокращает объем необходимого кода. И поскольку поддержка браузера React распространяется на все современные веб-браузеры, JSX совместим с любой доступной браузерной платформой.\n' +
      '\n' +
      'Если разработчик использует JSX для управления и обновления своей DOM, React создает нечто, называемое Virtual DOM. Виртуальная модель DOM - это искусственная копия модели DOM сайта, и React использует эту копию, чтобы увидеть, какие части фактической модели DOM необходимо изменить, когда происходит событие (например, когда пользователь нажимает кнопку). Этот вид выборочного обновления требует меньше вычислительных ресурсов и меньше времени на обновление страницы. В целом, это делает процесс программирования более приятным для программистов.',
    img: 'https://cdn-images-1.medium.com/max/1200/1*iVoDPqeYhZ4iwZv6Phn0PA.jpeg',
  },
  {
    tittle: 'Что важно знать ИТ рекрутеру о React при поиске работника?',
    intro: 'ИТ рекрутеру важно помнить, что React - это библиотека...',
    description:
      'ИТ рекрутеру важно помнить, что React - это библиотека / фреймворк представления, которая не определяет, как мы обрабатываем состояние (данные) в наших приложениях. Чтобы противостоять этому, в 2015 году была выпущена популярная библиотека для управления состоянием под названием Redux, которая использовалась до 2019 года. В настоящее время Redux утратил популярность, и React Hooks стал основным инструментом для управления состоянием приложения. Сегодня люди не очень часто пишут новые приложения с помощью Redux. Но многие существующие проекты, продукты и компании полагаются на Redux, и им придется активно поддерживать его в течение многих лет.',
    img: 'https://iphone-image.apkpure.com/v2/app/d/d/a/ddaf653c25ee05093e37a735763df66f.jpg',
  },
  {
    tittle: 'С какими инструментами и методами должен быть знаком React разработчик?',
    intro: 'Один из наиболее эффективных способов освоить React...',
    description:
      'Один из наиболее эффективных способов освоить React - это использовать его инструменты для создания веб-приложений для реальных проектов. Так что вполне вероятно, что у разработчика есть в этом большой опыт. Знание React Hooks, React Context API и Redux жизненно важно для разработчика React.\n' +
      '\n' +
      'Для создания визуальных элементов разработчик React должен хорошо разбираться в HTML, CSS, SASS / LESS / Stylus. Кроме того, SVG будет бонусом.\n' +
      'Хорошее знание JavaScript является фундаментальным. Также неплохо иметь типографский скрипт.\n' +
      'Они должны иметь практические знания этих библиотек: jQuery, MomentJS, Underscore и Lodash.\n' +
      'Опытный разработчик React знает, как использовать эти инструменты JavaScript: npm, Yarn, платформу Node.js (в целом) и как минимум один из инструментов для автоматизации создания приложения: Webpack, Parcel или Rollup (Grunt, Gulp и Раньше Browserify был популярен, а сейчас им мало что)\n' +
      'Для тестирования они должны знать TDD, BDD, Unit Tests и уметь уверенно использовать такие инструменты тестирования, как Jest или Enzyme. Жасмин, Карма, Мокко и Селен также будут полезны.\n' +
      'Приятно иметь хороший опыт управления облачными платформами, такими как SaaS, Amazon AWS, Google Cloud или Microsoft Azure.\n' +
      'Ищите кого-нибудь с навыками работы с этими платформами приложений: инструменты управления проектами: Jira и серверы: NGINX, Apache, а также инструменты онлайн-сотрудничества Slack, Miro, Figma и облачные документы, такие как Google или Microsoft и т. д.',
    img: 'https://cdn.discordapp.com/icons/936231607289921657/ba678ca63e848fb3c54f2db4ceb1b06a.png?size=512',
  },
  {
    tittle: 'Какой опыт важно искать в React разработчике?',
    intro: 'Научный и академический опыт для React практически не имеет значения...',
    description:
      'Научный и академический опыт для React практически не имеет значения. С другой стороны, коммерческий опыт очень важен. Опыт с открытым исходным кодом - это хорошо, но определенно не обязательно. Если разработчик поддерживает популярную библиотеку ОС, это будет большим преимуществом.\n' +
      '\n' +
      'Вообще говоря, выполнение простых задач в React несложно , поэтому многие подражатели-разработчики пытаются начать свою карьеру с фронтенд-разработки, часто с React. Поэтому есть много выпускников учебных курсов, которые хотят получить свою первую работу в React. Наличие коммерческого опыта - очень большое преимущество по сравнению с людьми, которые посещали учебные лагеря и часто создавали один или два проекта на стороне. Давать новичкам шанс - это здорово, но их опыт на самом деле не означает проверенных в бою знаний.',
    img: 'https://avuar.ru/upload/iblock/3d2/3d25e92641a9a2fcff66fef3cf06298f.jpg',
  },
  {
    tittle: 'Как проверить навыки разработчика React на этапе подбора?',
    intro: 'Технические или жесткие навыки - это профессиональные навыки , которые необходимы...',
    description: `Технические или жесткие навыки - это профессиональные навыки , которые необходимы для выполнения работы. Эти навыки приобретаются и развиваются посредством обучения, семинаров, тренингов и сертификатов.

Но с другой стороны, межличностные навыки относятся к межличностным способностям человека. По своей природе их довольно сложно измерить или количественно оценить. Мягкие навыки помогают нам определить, как сотрудник взаимодействует с другими и обладают ли они качествами, соответствующими корпоративной культуре. Некоторые из наиболее важных навыков программирования на React включают:
-Отличные коммуникативные навыки
-Командная работа
-Творческий подход
-Умение справляться с критикой
`,
    img: 'https://i.stack.imgur.com/rr2fi.png',
  },
];
